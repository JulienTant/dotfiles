* Doom Emacs Config

I might forget that this file is autogenerated... so let's set a reminder!

#+begin_src emacs-lisp
;;; $DOOMDIR/config.el -*- lexical-binding: t; -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; ! THIS FILES IS AUTOGENERATED FROM config.org
;; ! DO NOT EDIT MANUALLY
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

#+end_src

** Identity

Our identity is required for some stuff (gpg, email, templates. snippets...)

#+begin_src emacs-lisp

(setq user-full-name       "Julien Tant"
      user-mail-address    "julien@craftyx.fr")

#+end_src

** Font and Theme

#+begin_src emacs-lisp

(setq doom-font                (font-spec :family "JetBrainsMono Nerd Font" :size 13)
      doom-variable-pitch-font (font-spec :family "sans" :size 13))

(setq doom-theme 'doom-nord)

;; display the absolute line numbers (with t). other options are nil (no line numbers) or relative (line numbers relative to the cursor position)
(setq display-line-numbers-type t)

#+end_src


** Org & Roam2 Directory

Both Org and Roam need to have a directory set. We use ~file-truename~ to resolve symlink if necessary.

#+begin_src emacs-lisp

(make-directory "~/org")
(make-directory "~/org-roam")

(setq org-directory (file-truename "~/org/"))
(setq org-roam-directory (file-truename "~/org-roam"))


#+end_src


** Auto Tangle org files

Using the [[https://github.com/yilkalargaw/org-auto-tangle][auto-tangle-org]] package, any org files containing a non nil ~#+auto_tangle:~ option will be tangled

#+begin_src emacs-lisp

 (use-package! org-auto-tangle
  :defer t
  :hook (org-mode . org-auto-tangle-mode)
  )

#+end_src

this file is NOT auto tangled. It's tangled automatically by doom when running ~doom sync~


** Email with notmuch

#+begin_src emacs-lisp

;; -xdg because my config is in .config/ folder
(setq +notmuch-sync-backend 'mbsync-xdg)

#+end_src

** Emails with mu4e

I'm using a setup with isync (mbsync) to download my emails from SMPT and mu to index them.

#+begin_src emacs-lisp

(set-email-account! "aosixphone-gmail"
  '((mu4e-sent-folder       . "/aosixphone-gmail/sent")
    (mu4e-drafts-folder     . "/aosixphone-gmail/draft")
    (mu4e-trash-folder      . "/aosixphone-gmail/trash")
    (mu4e-refile-folder     . "/aosixphone-gmail/refile")
    (smtpmail-smtp-user     . "aosixphone@gmail.com")
    (mu4e-compose-signature . ""))
  t)


(set-email-account! "craftyx-gmail"
  '((mu4e-sent-folder       . "/craftyx-gmail/sent")
    (mu4e-drafts-folder     . "/craftyx-gmail/draft")
    (mu4e-trash-folder      . "/craftyx-gmail/trash")
    (mu4e-refile-folder     . "/craftyx-gmail/refile")
    (smtpmail-smtp-user     . "julien@craftyx.fr")
    (mu4e-compose-signature . ""))
  nil)

(setq +mu4e-gmail-accounts '(("aosixphone@gmail.com" . "/aosixphone-gmail")
                             ("julien@craftyx.fr" . "/craftyx-gmail")))

;; refresh automatically the emails
(after! mu4e (setq mu4e-update-interval 300))

#+end_src
